// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc692.AerialAssist2014.subsystems;
import org.usfirst.frc692.AerialAssist2014.RobotMap;
import org.usfirst.frc692.AerialAssist2014.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController lefttDriveVictor1 = RobotMap.driveTrainlefttDriveVictor1;
    SpeedController lefttDriveVictor2 = RobotMap.driveTrainlefttDriveVictor2;
    SpeedController rightDriveVictor1 = RobotMap.driveTrainrightDriveVictor1;
    SpeedController rightDriveVictor2 = RobotMap.driveTrainrightDriveVictor2;
    RobotDrive robotDrive = RobotMap.driveTrainRobotDrive;
    DoubleSolenoid leftShift = RobotMap.driveTrainleftShift;
    DoubleSolenoid rightShift = RobotMap.driveTrainrightShift;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveWithTwoJoystick());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void motorsForward()
    {
        robotDrive.drive(1, 0);
    }
    //sets victors to full power, causing the robot to go forward
    //AC 1/11/14
    
    public void stop()
    {
        robotDrive.drive(0, 0);
    }
    //sets motors to neutral, making the robot stop
    //AC 1/11/14
    
    public void takeJoystickAxisValues(double LeftDrive, double RightDrive)
    {
        robotDrive.tankDrive(LeftDrive, RightDrive);
    }
    //takes the axis values of the joysticks and inputs them into the victors
    //AC 1/11/14
    
}
